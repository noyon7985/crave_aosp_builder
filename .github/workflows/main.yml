#
# Copyright (C) 2024 Antonino Scordino
# Copyright (C) 2024 Souhrud Reddy
#
# SPDX-License-Identifier: Apache-2.0
#

name: Crave Builder
on:
  workflow_dispatch:
    # Various inputs to simplify usage of workflow.
    inputs:
      BASE_PROJECT:
        description: 'Choose a base project:'
        required: true
        default: 'LineageOS 20.0'
        type: choice
        options:
          - 'LineageOS 20.0'
          - 'LineageOS 21.0'
          - 'ArrowOS 13.1'
          - 'DerpFest 13.0'
          - 'CipherOS 14'
      BUILD_DIFFERENT_ROM:
        description: "Command to initialize a different 'repo' project:"
        required: false
        default: "echo 'Build Starting!'"
      REMOVALS:
        description: "Folders to be removed before syncing:"
        required: false
      LOCAL_MANIFEST:
        description: "Personal local manifest [repository or raw]:"
        required: true
        default: 'https://github.com/eurekadevelopment/local_manifests'
      LOCAL_MANIFEST_BRANCH:
        description: "Personal local manifest's branch:"
        required: false
        default: 'lineage-oxygen'
      DEVICE_NAME:
        description: "Device's codename:"
        required: true
        default: "oxygen"
      PRODUCT_NAME:
        description: "Product to build:"
        required: true
        default: "lineage_oxygen"
      BUILD_COMMAND:
        description: 'Command to be used for compiling:'
        required: true
        default: 'mka bacon'
      BUILD_TYPE:
        description: 'Type of build:'
        required: true
        default: 'userdebug'
        type: choice
        options: 
        - 'eng'
        - 'userdebug'
        - 'user' 
      CLEAN_BUILD:
        description: 'Build with a clean workspace?'
        required: true
        default: 'no'
        type: choice
        options: 
        - 'yes'
        - 'no'

jobs:
  test:
    name: Build using foss.crave.io
      # Change this to self-hosted after setting up devspace as github actions runner
    runs-on: ubuntu-latest
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}
    steps:
      # Create a project folder
    - name: Create Project Folders
      run: |
        if [ "${DCDEVSPACE}" != "1" ]; then
          echo "Symlinking devspace folder"
          mkdir -p devspace
          sudo mkdir -p /crave-devspaces
          sudo ln -sf ${pwd}/devspace /crave-devspaces
          sudo chmod 777 /crave-devspaces
        else
          echo "We are already running in devspace... Skipping Symlinks"
        fi
        case "${{ github.event.inputs.BASE_PROJECT }}" in
        "ArrowOS 13.1")
          export PROJECTFOLDER="/crave-devspaces/Arrow13"
        ;;
        "DerpFest 13.0")
          export PROJECTFOLDER="/crave-devspaces/DerpFest13"
        ;;
        "LineageOS 21.0")
          export PROJECTFOLDER="/crave-devspaces/Lineage21"
        ;;
        "LineageOS 20.0")
          export PROJECTFOLDER="/crave-devspaces/Lineage20"
        ;;
        "CipherOS 14")
          export PROJECTFOLDER="/crave-devspaces/Cipher14"
        ;;
        esac
        if [ -d "$PROJECTFOLDER" ]; then
          echo "$PROJECTFOLDER directory exists, skipping..."
        else
          mkdir $PROJECTFOLDER
        fi
        echo "PROJECTFOLDER=$PROJECTFOLDER" >> "$GITHUB_ENV"

      # Check-out in order to access the repository's files.
    - name: Check-out to repository
      uses: actions/checkout@v4

      # Set-up a spearate directory for the device.
    - name: Set-up workspace environment
      run: |
        mkdir ${{ github.event.inputs.DEVICE_NAME }}
        cd ${{ github.event.inputs.DEVICE_NAME }}
      continue-on-error: true

      # Download and configure 'repo'.
    - name: Configure the 'repo' environment
      run: |
        # Check if repo is already installed
        if ! command -v repo >/dev/null 2>&1; then
          echo "Repo not found. Installing now..."
          # Create bin directory if it doesn't exist
          mkdir -p ~/bin
          # Download repo script
          curl https://storage.googleapis.com/git-repo-downloads/repo >> ~/bin/repo
          # Make repo script executable
          chmod a+x ~/bin/repo
          # Create symbolic link to /usr/bin/repo
          sudo ln -sf "/home/$(whoami)/bin/repo" "/usr/bin/repo"
          echo "Repo installation complete."
        else
          echo "Repo already installed."
        fi
      continue-on-error: true
      
      # Generate 'git' credential in base of the workflow's author.
    - name: Set-up 'git' credential(s)
      run: |
        git config --global user.name "${{ github.actor }}"
        git config --global user.email "${{ github.actor_id }}+${{ github.actor }}@users.noreply.github.com"

      # Test Your Personal 'Local Manifests' against The ROM
    - name: Test Local Manifests
      run: |
            cd $PROJECTFOLDER
            rm -rf tester
            mkdir tester
            cd tester 
            if [ "${{ github.event.inputs.BUILD_DIFFERENT_ROM }}" == "echo 'Build Starting!'" ]; then
              case "${{ github.event.inputs.BASE_PROJECT }}" in
                  "ArrowOS 13.1")
                    repo init -u https://github.com/ArrowOS/android_manifest.git -b arrow-13.1
                  ;;
                  "DerpFest 13.0")
                    repo init -u https://github.com/DerpFest-AOSP/manifest.git -b 13
                  ;;
                  "LineageOS 21.0")
                    repo init -u https://github.com/LineageOS/android.git -b lineage-21.0
                  ;;
                  "LineageOS 20.0")
                    repo init -u https://github.com/LineageOS/android.git -b lineage-20.0
                  ;;
                  "CipherOS 14")
                    repo init -u https://github.com/CipherOS/android_manifest.git -b fourteen
                  ;;
              esac
             else
                      ${{ github.event.inputs.BUILD_DIFFERENT_ROM }}
                      
              fi
              git clone ${{ github.event.inputs.LOCAL_MANIFEST }} --depth 1 -b ${{ github.event.inputs.LOCAL_MANIFEST_BRANCH }} .repo/local_manifests && \
              timeout 1m repo sync --force-sync || { exit_code=$?; [ $exit_code -eq 124 ] || (echo "Error: Process failed with exit code $exit_code"; exit $exit_code); }
              rm -rf .repo
      timeout-minutes: 10

      # Download and configure 'crave'.
    - name: Configure the 'crave' environment
      run: |
        mkdir -p $PROJECTFOLDER/.repo/manifests
        if [ "${DCDEVSPACE}" == "1" ]; then
          echo 'No need to set up crave, we are already running in devspace!'
          cp crave.yaml $PROJECTFOLDER/.repo/manifests
        else
          curl -s https://raw.githubusercontent.com/accupara/crave/master/get_crave.sh | bash -s --
          mv ${PWD}/crave ${HOME}/bin/
          sudo ln -sf /home/${USER}/bin/crave /usr/bin/crave
          envsubst < ${PWD}/crave.conf.sample >> ${PWD}/crave.conf
          rm -rf ${PWD}/crave.conf.sample
          cp crave.conf $PROJECTFOLDER
          cp crave.yaml $PROJECTFOLDER/.repo/manifests
        fi
      env:
        CRAVE_USERNAME: ${{  secrets.CRAVE_USERNAME  }}
        CRAVE_TOKEN: ${{  secrets.CRAVE_TOKEN  }}

      # Initialize the previously choosen 'repo' project.
    - name: Set the 'crave' project
      run: |
        cd $PROJECTFOLDER
        case "${{ github.event.inputs.BASE_PROJECT }}" in
          "ArrowOS 13.1")
            repo init -u https://github.com/ArrowOS/android_manifest.git -b arrow-13.1
            export BUILD_DIFFERENT_ROM="repo init -u https://github.com/ArrowOS/android_manifest.git -b arrow-13.1"
          ;;
          "DerpFest 13.0")
            repo init -u https://github.com/DerpFest-AOSP/manifest.git -b 13
            export BUILD_DIFFERENT_ROM="repo init -u https://github.com/DerpFest-AOSP/manifest.git -b 13"
          ;;
          "LineageOS 21.0")
            repo init -u https://github.com/LineageOS/android.git -b lineage-21.0
            export BUILD_DIFFERENT_ROM="repo init -u https://github.com/LineageOS/android.git -b lineage-21.0"
          ;;
          "LineageOS 20.0")
            repo init -u https://github.com/accupara/los20.git -b lineage-20.0
            export BUILD_DIFFERENT_ROM="repo init -u https://github.com/accupara/los20.git -b lineage-20.0"
          ;;
          "CipherOS 14")
            repo init -u https://github.com/CipherOS/android_manifest.git -b fourteen
            export BUILD_DIFFERENT_ROM="repo init -u https://github.com/CipherOS/android_manifest.git -b fourteen"
          ;;
        esac
        if [ "${{ github.event.inputs.BUILD_DIFFERENT_ROM }}" == "echo 'Build Starting!'" ]; then
          echo "Building ${{ github.event.inputs.BASE_PROJECT }}"
        else
          export BUILD_DIFFERENT_ROM="${{ github.event.inputs.BUILD_DIFFERENT_ROM }}"
        fi
        echo "BUILD_DIFFERENT_ROM=$BUILD_DIFFERENT_ROM" >> "$GITHUB_ENV"
        
      # Create a 'crave' job for building.
    - name: Start compilation through 'crave'
      run: |
        cd $PROJECTFOLDER

        if [ "${{ github.event.inputs.CLEAN_BUILD }}" == "yes" ]; then
           export CLEAN="clean"
        fi

        crave run --no-patch --${CLEAN} "rm -rf .repo/local_manifests/ ${{ github.event.inputs.REMOVALS }} && \
        # Clone local_manifests repository
        $BUILD_DIFFERENT_ROM ; \
        git clone ${{ github.event.inputs.LOCAL_MANIFEST }} -b ${{ github.event.inputs.LOCAL_MANIFEST_BRANCH }} .repo/local_manifests && \
        
        # Sync the repositories
        repo sync -c -j4 --no-clone-bundle --no-tags --optimized-fetch --prune --force-sync  && \

        # Set up build environment
        export BUILD_USERNAME=${{ github.actor }} ; \
        export BUILD_HOSTNAME=crave ; \
        export MAINTAINER=NoYoN ; \
        export MATRIXX_MAINTAINER=NoYoN ; \
        . build/envsetup.sh && \

        # Build the ROM
        lunch ${{ github.event.inputs.PRODUCT_NAME }}-${{ github.event.inputs.BUILD_TYPE }} && \
        make installclean && \
        ${{ github.event.inputs.BUILD_COMMAND }}"


      # Only reach this wheter the user killed the workflow.
    - name: Execute if the job is cancelled
      if: ${{ cancelled() }}
      run: |
        cd $PROJECTFOLDER
        crave stop --all

      # Pull '.zip's and '.img's from 'crave'.
    - name: Retrive build artifact(s)
      run: |
        cd $PROJECTFOLDER
        crave ssh -- sleep 1
        crave pull out/target/product/${{ github.event.inputs.DEVICE_NAME }}/*.zip
        crave pull out/target/product/${{ github.event.inputs.DEVICE_NAME }}/*.img

      # Directly upload to releases.
    - name: Upload to repository's releases page
      uses: softprops/action-gh-release@v1
      with:
        files: |
          $PROJECTFOLDER/${{ github.event.inputs.DEVICE_NAME }}/recovery.img
          $PROJECTFOLDER/${{ github.event.inputs.DEVICE_NAME }}/boot.img
          $PROJECTFOLDER/${{ github.event.inputs.DEVICE_NAME }}/vendor_boot.img
          $PROJECTFOLDER/${{ github.event.inputs.DEVICE_NAME }}/vendor.img
          $PROJECTFOLDER/${{ github.event.inputs.DEVICE_NAME }}/system.img
          $PROJECTFOLDER/${{ github.event.inputs.DEVICE_NAME }}/*.zip
        name: ${{ github.event.inputs.PRODUCT_NAME }}-${{ github.run_id }}
        tag_name: ${{ github.run_id }}
        body: |
          Target: ${{ github.event.inputs.PRODUCT_NAME }}-${{ github.event.inputs.BUILD_TYPE }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
